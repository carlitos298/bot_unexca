import os
from flask import Flask, request
from telegram import Update, Bot
from telegram.ext import Dispatcher, CommandHandler, MessageHandler, filters, ContextTypes

# Informaci√≥n del centro universitario
info = {
    "horarios": "S√°bados desde las 8:00 am a 4:00 pm.",
    "ubicaci√≥n": "M93G+QMW, Puerto Ayacucho 7101, Amazonas, Venezuela.",
    "tel√©fono": "04269002328",
    "correo": "contacto@unexca.org",
    "inscripci√≥n": "Puedes inscribirte directamente en la sede o a trav√©s del correo contacto@unexca.org.",
    "resagado": "Los estudiantes rezagados deben comunicarse con la coordinaci√≥n acad√©mica.",
    "beca": "Se otorgan becas seg√∫n el rendimiento acad√©mico y necesidad econ√≥mica.",
    "constancia": "Las constancias se solicitan en la oficina administrativa o por correo.",
    "requisitos": "C√©dula, notas certificadas, t√≠tulo de bachiller, y foto tama√±o carnet.",
    "eventos": "Revisa los eventos actuales en la sede principal o en redes sociales.",
    "misi√≥n": "Formar profesionales competentes con valores √©ticos y compromiso social.",
    "visi√≥n": "Ser una instituci√≥n l√≠der en educaci√≥n universitaria integral en Venezuela.",
    "historia": "La UNEXCA fue creada para democratizar el acceso a la educaci√≥n superior.",
    "carreras": "Ingenier√≠a en Sistemas, Turismo y Educaci√≥n.",
    "servicios": "Orientaci√≥n acad√©mica, biblioteca, comedor y soporte tecnol√≥gico."
}

# Funci√≥n /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("¬°Hola! ¬øEn qu√© puedo ayudarte?")

# Funci√≥n para manejar mensajes
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.lower()
    if "hola" in text:
        await update.message.reply_text("¬°Hola! ¬øEn qu√© puedo ayudarte?")
    elif "ayuda" in text:
        await update.message.reply_text(
            "Puedes preguntarme por: horarios, ubicaci√≥n, tel√©fono, correo, inscripci√≥n, "
            "resagado, beca, constancia, requisitos, eventos, misi√≥n, visi√≥n, historia, "
            "carreras o servicios. üòä"
        )
    elif any(word in text for word in ["adi√≥s", "chao", "bye"]):
        await update.message.reply_text("¬°Adi√≥s! Que tengas un buen d√≠a üòÑ")
    else:
        for key, value in info.items():
            if key in text:
                await update.message.reply_text(value)
                return
        await update.message.reply_text("No entiendo eso üòÖ. Escribe 'ayuda' para ver qu√© puedo responder.")

# Inicializaci√≥n de Flask
server = Flask(__name__)

# Obtener token de entorno
TOKEN = os.environ.get("TELEGRAM_TOKEN")
if not TOKEN:
    raise ValueError("‚ùå TELEGRAM_TOKEN no definido en variables de entorno")

bot = Bot(token=TOKEN)
dispatcher = Dispatcher(bot, None, workers=0)  # workers=0 porque Render maneja las peticiones

# A√±adir handlers
dispatcher.add_handler(CommandHandler("start", start))
dispatcher.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

# Ruta principal del webhook
@server.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), bot)
    dispatcher.process_update(update)
    return "ok"

# Ruta para prueba de servidor
@server.route('/')
def home():
    return "Bot de UNEXCA activo ‚úÖ"

# Configurar webhook con Telegram
if __name__ == "__main__":
    # Tu dominio en Render (ejemplo): https://tu-app.onrender.com
    WEBHOOK_URL = f"{os.environ.get('RENDER_EXTERNAL_URL')}/{TOKEN}"
    bot.delete_webhook()
    bot.set_webhook(WEBHOOK_URL)
    server.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
